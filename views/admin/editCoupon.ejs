<%- include('../layouts/adminHeader')%>

<div class="container" style="max-width: 500px;  margin-top: 10px;">
    <div class="row justify-content-center">
      <div class="col-12 grid-margin">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title pb-5">Edit coupon</h4>
            <form class="form-sample">
              <div class="alert alert-danger" id="errorDisplay" role="alert" hidden></div>
  
              <div class="col">
               
  
                <div class="col-md-12 mb-3">
                  <label class="form-label">Validity</label>
                  <input type="date" name="" class="form-control" id="validity" cols="45" rows="5">
                  <p id="error2" class="text-danger"></p>
                </div>
  
                <div class="col-md-12 mb-3">
                  <label class="form-label">Min Purchase</label>
                  <input id="minAmount" value="<%= couponDetails.minPurchase%>" type="number" class="form-control" />
                  <p id="error3" class="text-danger"></p>
                </div>
  
                <div class="col-md-12 mb-3">
                  <label class="form-label">Discount (%)</label>
                  <input id="discountPercentage" value="<%= couponDetails.minDiscountPercentage%>" type="number" class="form-control" />
                  <p id="error4" class="text-danger"></p>
                </div>
  
                <div class="col-md-12 mb-3">
                  <label class="form-label">Max Discount (Rs)</label>
                  <input id="maxDiscountValue" value="<%= couponDetails.maxDiscountValue%>" type="number" class="form-control" />
                  <p id="error5" class="text-danger"></p>
                </div>
  
                <div class="col-md-12 mb-3">
                  <label class="form-label">Description (T&amp;C)</label>
                  <textarea name="" class="form-control" id="description" cols="45" rows="5"><%= couponDetails.description%></textarea>
                  <p id="error6" class="text-danger"></p>
                </div>

                <input type="hidden" id="couponId" value="<%= couponDetails.couponId %>" name="couponId">

  
                <div class="col-12">
                  <button type="button" class="btn btn-outline-info" onclick="validatorCoupon()">Submit</button>
                </div>
              </div>
  
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <%-include('../layouts/adminFooter')%>


  <style>
    p {
   font-size: 12px;
  }
  </style>
  
  <script>
   function validatorCoupon(){
  const idValue = document.getElementById('couponId')
  const validity = document.getElementById('validity')
  const minAmount = document.getElementById('minAmount')
  const discountPercentage = document.getElementById('discountPercentage')
  const maxDiscount = document.getElementById('maxDiscountValue')
  const description = document.getElementById('description')
  
  const id = idValue.value.trim()
  const validityValue = validity.value.trim()
  const minAmountValue = minAmount.value.trim()
  const discountPercentageValue = discountPercentage.value.trim()
  const maxDiscountValue = maxDiscount.value.trim()
  const descriptionValue = description.value.trim()
  
  
  const error2 = validity.parentElement.querySelector('p')
  const error3 = minAmount.parentElement.querySelector('p')
  const error4 = discountPercentage.parentElement.querySelector('p')
  const error5 = maxDiscount.parentElement.querySelector('p')
  const error6 = description.parentElement.querySelector('p')
  
  
  error2.innerText = ''
  error3.innerText = ''
  error4.innerText = ''
  error5.innerText = ''
  error6.innerText = ''
  
  let flag = 1
  
 
  if (validityValue == '') {
   error2.innerText = 'Validity is required'
   flag = 2
  }
  if (minAmountValue == '') {
   error3.innerText = 'Minimum amount is required'
   flag = 2
  }
  if (minAmountValue < 0) {
   error3.innerText = 'Minimum amount should be greater than or Equal to Zero'
   flag = 2
  }
  if (discountPercentageValue == '') {
   error4.innerText = 'Discount percentage is required'
   flag = 2
  }
  if (discountPercentageValue <= 0 ||discountPercentageValue >= 99) {
   error4.innerText = 'Discount percentage should be between  1 and 99 '
   flag = 2
  }
  if (maxDiscountValue == '') {
   error5.innerText = 'Maximum discount is required'
   flag = 2
  }
  if (maxDiscountValue <= 0) {
   error5.innerText = 'Maximum discount should be greater than Zero'
   flag = 2
  }
  if (descriptionValue == '') {
   error6.innerText = 'Description is required'
   flag = 2
  }
  
  if (flag == 1) {
   submit(id,validityValue, minAmountValue, discountPercentageValue, maxDiscountValue, descriptionValue)
  }
  }
  
  function submit(id,validity, minAmount, minDiscountPercentage, maxDiscount, description){
   $.ajax({
       url : '/admin/editCoupon',
       method : 'PATCH',
       data : {
           id : id,
           validity : validity,
           minPurchase : minAmount,
           minDiscountPercentage : minDiscountPercentage,
           maxDiscount : maxDiscount,
           description : description
       },
       success:(response)=>{
         console.log(response.status);
           if(response.status){
             Swal.fire({
                   icon: 'success',
                   title: 'Coupon updated Successfully!',
                   showConfirmButton: false,
                   timer: 5000
               }).then(() => {
                   location.href = '/admin/couponList'; 
               });
           }
       }
   })
  }
  
  
  
  </script>

<script>
  // Get the input element by its id
  const dateInput = document.getElementById('validity');

  // Create a new Date object for today's date
  const today = new Date();

  // Add one day to today's date to get tomorrow's date
  const tomorrow = new Date(today);
  tomorrow.setDate(today.getDate() + 1);

  // Format the date to YYYY-MM-DD which is the required format for the input element
  const year = tomorrow.getFullYear();
  const month = String(tomorrow.getMonth() + 1).padStart(2, '0');
  const day = String(tomorrow.getDate()).padStart(2, '0');
  const minDate = `${year}-${month}-${day}`;

  // Set the min attribute of the date input to tomorrow's date
  dateInput.setAttribute('min', minDate);
</script>